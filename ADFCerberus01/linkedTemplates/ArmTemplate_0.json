{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADFCerberus01"
		},
		"LSAzureSqlDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LSAzureSqlDatabase'"
		},
		"LSBlobFiles_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LSBlobFiles'"
		},
		"LSOutputIPL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LSOutputIPL'"
		},
		"LS_ADLS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_ADLS'"
		},
		"LSforCyprus01_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LSforCyprus01'"
		},
		"LSforWalmartsales_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LSforWalmartsales'"
		},
		"LS_ADLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://saleviathan01.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LSAzureSqlDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LSAzureSqlDatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LSBlobFiles')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LSBlobFiles_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LSOutputIPL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LSOutputIPL_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ADLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_ADLS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_ADLS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LSforCyprus01')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Linked Service",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LSforCyprus01_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LSforWalmartsales')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LSforWalmartsales_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AmazonDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Amazon Sale Report.csv",
						"fileSystem": "saleviathan-container01"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "index",
						"type": "String"
					},
					{
						"name": "Order ID",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					},
					{
						"name": "Fulfilment",
						"type": "String"
					},
					{
						"name": "Sales Channel ",
						"type": "String"
					},
					{
						"name": "ship-service-level",
						"type": "String"
					},
					{
						"name": "Style",
						"type": "String"
					},
					{
						"name": "SKU",
						"type": "String"
					},
					{
						"name": "Category",
						"type": "String"
					},
					{
						"name": "Size",
						"type": "String"
					},
					{
						"name": "ASIN",
						"type": "String"
					},
					{
						"name": "Courier Status",
						"type": "String"
					},
					{
						"name": "Qty",
						"type": "String"
					},
					{
						"name": "currency",
						"type": "String"
					},
					{
						"name": "Amount",
						"type": "String"
					},
					{
						"name": "ship-city",
						"type": "String"
					},
					{
						"name": "ship-state",
						"type": "String"
					},
					{
						"name": "ship-postal-code",
						"type": "String"
					},
					{
						"name": "ship-country",
						"type": "String"
					},
					{
						"name": "promotion-ids",
						"type": "String"
					},
					{
						"name": "B2B",
						"type": "String"
					},
					{
						"name": "fulfilled-by",
						"type": "String"
					},
					{
						"name": "Unnamed: 22",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LSAzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "match_no",
						"type": "int",
						"precision": 10
					},
					{
						"name": "city",
						"type": "varchar"
					},
					{
						"name": "date_of_match",
						"type": "date"
					},
					{
						"name": "venue",
						"type": "varchar"
					},
					{
						"name": "Home_team",
						"type": "varchar"
					},
					{
						"name": "Away_team",
						"type": "varchar"
					},
					{
						"name": "Toss_winner",
						"type": "varchar"
					},
					{
						"name": "Winner",
						"type": "varchar"
					},
					{
						"name": "Man_of_the_match",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Match"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LSAzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LSAzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "AmazonData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LSAzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LSAzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "AmazonDB"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LSAzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTableWalmart')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LSAzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "walmart"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LSAzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSIPLInputData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LSforCyprus01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "IPL_2023_Match_Data.csv",
						"container": "saleviathan-container01"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "match_no",
						"type": "String"
					},
					{
						"name": "city",
						"type": "String"
					},
					{
						"name": "date_of_match",
						"type": "String"
					},
					{
						"name": "venue",
						"type": "String"
					},
					{
						"name": "Home_team",
						"type": "String"
					},
					{
						"name": "Away_team",
						"type": "String"
					},
					{
						"name": "toss_winner",
						"type": "String"
					},
					{
						"name": "winner",
						"type": "String"
					},
					{
						"name": "man_of_the_match",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LSforCyprus01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LSforCyprus01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "IPL_2023_Match_Data.csv",
						"container": "saleviathan-container01"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "match_no",
						"type": "String"
					},
					{
						"name": "city",
						"type": "String"
					},
					{
						"name": "date_of_match",
						"type": "String"
					},
					{
						"name": "venue",
						"type": "String"
					},
					{
						"name": "Home_team",
						"type": "String"
					},
					{
						"name": "Away_team",
						"type": "String"
					},
					{
						"name": "toss_winner",
						"type": "String"
					},
					{
						"name": "winner",
						"type": "String"
					},
					{
						"name": "man_of_the_match",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LSforCyprus01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IPLMatchDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "IPL_2023_Match_Data.csv",
						"fileSystem": "saleviathan-container01"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "match_no",
						"type": "String"
					},
					{
						"name": "city",
						"type": "String"
					},
					{
						"name": "date_of_match",
						"type": "String"
					},
					{
						"name": "venue",
						"type": "String"
					},
					{
						"name": "Home_team",
						"type": "String"
					},
					{
						"name": "Away_team",
						"type": "String"
					},
					{
						"name": "toss_winner",
						"type": "String"
					},
					{
						"name": "winner",
						"type": "String"
					},
					{
						"name": "man_of_the_match",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IPLTableDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LSAzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "ipldata"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LSAzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WalamartData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "WalmartSalesData.csv",
						"fileSystem": "saleviathan-container01"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Invoice ID",
						"type": "String"
					},
					{
						"name": "Branch",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "Customer type",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Product line",
						"type": "String"
					},
					{
						"name": "Unit price",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Tax 5%",
						"type": "String"
					},
					{
						"name": "Total",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Time",
						"type": "String"
					},
					{
						"name": "Payment",
						"type": "String"
					},
					{
						"name": "cogs",
						"type": "String"
					},
					{
						"name": "gross margin percentage",
						"type": "String"
					},
					{
						"name": "gross income",
						"type": "String"
					},
					{
						"name": "Rating",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WalmartSalseOPdb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LSforWalmartsales",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "walmart"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LSforWalmartsales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/amazon_ds_2022')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "amazon.csv",
						"fileSystem": "saleviathan-container01"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "product_id",
						"type": "String"
					},
					{
						"name": "product_name",
						"type": "String"
					},
					{
						"name": "category",
						"type": "String"
					},
					{
						"name": "discounted_price",
						"type": "String"
					},
					{
						"name": "actual_price",
						"type": "String"
					},
					{
						"name": "discount_percentage",
						"type": "String"
					},
					{
						"name": "rating",
						"type": "String"
					},
					{
						"name": "rating_count",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/testDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Orders",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Global Superstore 2018.xlsx",
						"fileSystem": "saleviathan-container01"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Row ID",
						"type": "String"
					},
					{
						"name": "Order ID",
						"type": "String"
					},
					{
						"name": "Order Date",
						"type": "String"
					},
					{
						"name": "Ship Date",
						"type": "String"
					},
					{
						"name": "Ship Mode",
						"type": "String"
					},
					{
						"name": "Customer ID",
						"type": "String"
					},
					{
						"name": "Customer Name",
						"type": "String"
					},
					{
						"name": "Segment",
						"type": "String"
					},
					{
						"name": "Postal Code",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "Market",
						"type": "String"
					},
					{
						"name": "Product ID",
						"type": "String"
					},
					{
						"name": "Product Name",
						"type": "String"
					},
					{
						"name": "Sub-Category",
						"type": "String"
					},
					{
						"name": "Category",
						"type": "String"
					},
					{
						"name": "Sales",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Discount",
						"type": "String"
					},
					{
						"name": "Profit",
						"type": "String"
					},
					{
						"name": "Shipping Cost",
						"type": "String"
					},
					{
						"name": "Order Priority",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AmazonDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AmazonDS",
								"type": "DatasetReference"
							},
							"name": "SourceData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          index as string,",
						"          {Order ID} as string,",
						"          Date as date,",
						"          Status as string,",
						"          Fulfilment as string,",
						"          {Sales Channel } as string,",
						"          {ship-service-level} as string,",
						"          Style as string,",
						"          SKU as string,",
						"          Category as string,",
						"          Size as string,",
						"          ASIN as string,",
						"          {Courier Status} as string,",
						"          Qty as string,",
						"          currency as string,",
						"          Amount as string,",
						"          {ship-city} as string,",
						"          {ship-state} as string,",
						"          {ship-postal-code} as string,",
						"          {ship-country} as string,",
						"          {promotion-ids} as string,",
						"          B2B as string,",
						"          {fulfilled-by} as string,",
						"          {Unnamed: 22} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> SourceData",
						"SourceData select(mapColumn(",
						"          {Order ID},",
						"          Status,",
						"          Fulfilment,",
						"          {Sales Channel },",
						"          {ship-service-level},",
						"          Style,",
						"          SKU,",
						"          Category,",
						"          Size,",
						"          ASIN,",
						"          {Courier Status},",
						"          Qty,",
						"          currency,",
						"          Amount,",
						"          {ship-city},",
						"          {ship-state},",
						"          {ship-postal-code},",
						"          {ship-country}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          {Order ID},",
						"          Status,",
						"          Fulfilment,",
						"          {Sales Channel },",
						"          {ship-service-level},",
						"          Style,",
						"          SKU,",
						"          Category,",
						"          Size,",
						"          ASIN,",
						"          {Courier Status},",
						"          Qty,",
						"          currency,",
						"          Amount,",
						"          {ship-city},",
						"          {ship-state},",
						"          {ship-postal-code},",
						"          {ship-country}",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AmazonDS')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]"
			]
		}
	]
}